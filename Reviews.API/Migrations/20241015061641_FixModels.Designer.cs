// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reviews.API.Repositories;

#nullable disable

namespace Reviews.API.Migrations
{
    [DbContext(typeof(ReviewsDbContext))]
    [Migration("20241015061641_FixModels")]
    partial class FixModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Reviews.API.Models.Actor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9802d4e7-1248-4a3c-be68-cc5196ae5a5b"),
                            Country = "England",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tom",
                            Surname = "Holland",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4f13e67b-285f-4e30-9a54-154fa8ea1af2"),
                            Country = "England",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Emma",
                            Surname = "Watson",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b645ec84-e4bf-4d4f-b6ae-372b1f12329f"),
                            Country = "Canada",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ryan",
                            Surname = "Reynolds",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("45bcd88f-8c1f-4f95-b6ad-c1ea831e74ae"),
                            Country = "USA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Scarlett",
                            Surname = "Johansson",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("512e6c92-f3b3-43f4-bb99-085e5cf1abbf"),
                            Country = "Chile",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pedro",
                            Surname = "Pascal",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Reviews.API.Models.Director", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f53b590-e7ed-4c5c-a6f8-9f182cf78278"),
                            Country = "USA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tim",
                            Surname = "Berton",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1e95e4e8-bf2b-4e09-b3e0-f59a8e4e601f"),
                            Country = "UK",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Christopher",
                            Surname = "Nolan",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7b99b5d6-1234-4a6d-8b25-eb210b48dd10"),
                            Country = "USA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Greta",
                            Surname = "Gerwig",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("156fcaab-2bfe-411c-a58e-f92d5e2a0991"),
                            Country = "USA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Quentin",
                            Surname = "Tarantino",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c71faf10-d0d1-42c8-b315-8b5364a58672"),
                            Country = "Mexico",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alfonso",
                            Surname = "Cuarón",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Reviews.API.Models.Film", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ad3bfab-9b78-4df0-9b40-b6acb5b04d7f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateOnly(2000, 12, 12),
                            Description = "...",
                            DirectorId = new Guid("3f53b590-e7ed-4c5c-a6f8-9f182cf78278"),
                            Name = "Coralline",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a6c7d04f-f6dc-4b43-8b58-b7b1d5e0816e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateOnly(2010, 7, 16),
                            Description = "A thief who steals corporate secrets through the use of dream-sharing technology.",
                            DirectorId = new Guid("1e95e4e8-bf2b-4e09-b3e0-f59a8e4e601f"),
                            Name = "Inception",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e3c0b4e4-7768-4143-b8d9-b218e9d77444"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateOnly(1994, 10, 14),
                            Description = "The lives of two mob hitmen, a boxer, a gangster's wife, and a pair of diner bandits intertwine.",
                            DirectorId = new Guid("7b99b5d6-1234-4a6d-8b25-eb210b48dd10"),
                            Name = "Pulp Fiction",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("42d3f71b-04bc-4b16-8d7f-4955de68bd19"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateOnly(2014, 2, 28),
                            Description = "Follows the misadventures of Gustave H, the concierge at a famous hotel.",
                            DirectorId = new Guid("156fcaab-2bfe-411c-a58e-f92d5e2a0991"),
                            Name = "The Grand Budapest Hotel",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("eb7c3fae-7008-43c7-bb9a-d2d37458b6e2"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateOnly(2006, 10, 11),
                            Description = "A young girl in post-Civil War Spain escapes into a mythical labyrinth.",
                            DirectorId = new Guid("c71faf10-d0d1-42c8-b315-8b5364a58672"),
                            Name = "Pan's Labyrinth",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Reviews.API.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("FilmId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("992fdd16-dda3-45c4-8411-da8c0a953bfd"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmId = new Guid("4ad3bfab-9b78-4df0-9b40-b6acb5b04d7f"),
                            Mark = 1,
                            Text = "Good",
                            Type = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("38d0309d-c534-4cda-bcb8-0d0e1f62c3f9")
                        },
                        new
                        {
                            Id = new Guid("30cb817f-b245-41d7-877a-9b6d996c19e5"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmId = new Guid("a6c7d04f-f6dc-4b43-8b58-b7b1d5e0816e"),
                            Mark = 5,
                            Text = "Absolutely fantastic! A must-watch.",
                            Type = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("d67e36c7-1d12-4583-9513-967d7d9e0784")
                        },
                        new
                        {
                            Id = new Guid("bf448d1c-e590-4167-b4d7-9949e620149d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmId = new Guid("e3c0b4e4-7768-4143-b8d9-b218e9d77444"),
                            Mark = 3,
                            Text = "It was okay, nothing special.",
                            Type = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("bc88c297-6c3c-46af-83d6-be1ed99902b2")
                        },
                        new
                        {
                            Id = new Guid("70e37ddc-a8a3-4597-bbaa-218b6708df20"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmId = new Guid("42d3f71b-04bc-4b16-8d7f-4955de68bd19"),
                            Mark = 2,
                            Text = "I didn't enjoy it as much as I hoped.",
                            Type = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("cd22c8ef-e58c-4b79-b8e0-df707f9c793c")
                        },
                        new
                        {
                            Id = new Guid("3bdc8564-7886-4004-b465-ed686b62a87d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmId = new Guid("eb7c3fae-7008-43c7-bb9a-d2d37458b6e2"),
                            Mark = 4,
                            Text = "Great performances and stunning visuals!",
                            Type = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("9d822e19-19c8-4b25-9e73-a33c8c53d1e8")
                        });
                });

            modelBuilder.Entity("Reviews.API.Models.Role", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ActorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("FilmId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.HasIndex("FilmId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa42b029-c47b-43da-946d-91f28f6d9a00"),
                            ActorId = new Guid("9802d4e7-1248-4a3c-be68-cc5196ae5a5b"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmId = new Guid("4ad3bfab-9b78-4df0-9b40-b6acb5b04d7f"),
                            Title = "1",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5816fd9c-3c24-4d6c-ac91-6658074a1ce6"),
                            ActorId = new Guid("4f13e67b-285f-4e30-9a54-154fa8ea1af2"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmId = new Guid("4ad3bfab-9b78-4df0-9b40-b6acb5b04d7f"),
                            Title = "1",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4cfe1a20-1236-4119-8bb3-24f22bd11023"),
                            ActorId = new Guid("b645ec84-e4bf-4d4f-b6ae-372b1f12329f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmId = new Guid("a6c7d04f-f6dc-4b43-8b58-b7b1d5e0816e"),
                            Title = "1",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("580c15bf-287f-48d6-9ca5-9af70b68de21"),
                            ActorId = new Guid("b645ec84-e4bf-4d4f-b6ae-372b1f12329f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmId = new Guid("a6c7d04f-f6dc-4b43-8b58-b7b1d5e0816e"),
                            Title = "1",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("20143fa0-1131-4a70-8e7a-41becc26a6e2"),
                            ActorId = new Guid("512e6c92-f3b3-43f4-bb99-085e5cf1abbf"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmId = new Guid("e3c0b4e4-7768-4143-b8d9-b218e9d77444"),
                            Title = "1",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3c2eafd8-7188-462f-90ea-0486b4680af8"),
                            ActorId = new Guid("512e6c92-f3b3-43f4-bb99-085e5cf1abbf"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmId = new Guid("e3c0b4e4-7768-4143-b8d9-b218e9d77444"),
                            Title = "1",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("09a86ae2-4693-413a-99ad-040aef492c1c"),
                            ActorId = new Guid("512e6c92-f3b3-43f4-bb99-085e5cf1abbf"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmId = new Guid("42d3f71b-04bc-4b16-8d7f-4955de68bd19"),
                            Title = "1",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b38f1e1e-21f6-475a-95c1-1a4e517ef3e7"),
                            ActorId = new Guid("512e6c92-f3b3-43f4-bb99-085e5cf1abbf"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmId = new Guid("eb7c3fae-7008-43c7-bb9a-d2d37458b6e2"),
                            Title = "1",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3133bdba-090b-45e3-b9f0-15efc7e602b1"),
                            ActorId = new Guid("512e6c92-f3b3-43f4-bb99-085e5cf1abbf"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmId = new Guid("4ad3bfab-9b78-4df0-9b40-b6acb5b04d7f"),
                            Title = "1",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2dcaafe0-7c8a-4768-a398-ce4b8bfc993d"),
                            ActorId = new Guid("512e6c92-f3b3-43f4-bb99-085e5cf1abbf"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmId = new Guid("a6c7d04f-f6dc-4b43-8b58-b7b1d5e0816e"),
                            Title = "1",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Reviews.API.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("RegistrationDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("38d0309d-c534-4cda-bcb8-0d0e1f62c3f9"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "John",
                            RegistrationDate = new DateOnly(2000, 12, 12),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d67e36c7-1d12-4583-9513-967d7d9e0784"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alice",
                            RegistrationDate = new DateOnly(2015, 3, 5),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bc88c297-6c3c-46af-83d6-be1ed99902b2"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Michael",
                            RegistrationDate = new DateOnly(2018, 7, 22),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cd22c8ef-e58c-4b79-b8e0-df707f9c793c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sophia",
                            RegistrationDate = new DateOnly(2021, 11, 30),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9d822e19-19c8-4b25-9e73-a33c8c53d1e8"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "David",
                            RegistrationDate = new DateOnly(2012, 1, 15),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Reviews.API.Models.Film", b =>
                {
                    b.HasOne("Reviews.API.Models.Director", "Director")
                        .WithMany("Films")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("Reviews.API.Models.Review", b =>
                {
                    b.HasOne("Reviews.API.Models.Film", "Film")
                        .WithMany("Reviews")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reviews.API.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Reviews.API.Models.Role", b =>
                {
                    b.HasOne("Reviews.API.Models.Actor", "Actor")
                        .WithMany("Roles")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reviews.API.Models.Film", "Film")
                        .WithMany("Roles")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("Reviews.API.Models.Actor", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Reviews.API.Models.Director", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("Reviews.API.Models.Film", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Reviews.API.Models.User", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
